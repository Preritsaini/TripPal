.animate {
    animation-duration: 0.8s;
    animation-fill-mode: both;
}

/* Entrance animations */
.fade-in {
    opacity: 0;
}

.fade-in.animate {
    animation-name: fadeIn;
}

@keyframes fadeIn {
    from {
        opacity: 0;
    }
    to {
        opacity: 1;
    }
}

.slide-up {
    opacity: 0;
    transform: translateY(30px);
}

.slide-up.animate {
    animation-name: slideUp;
}

@keyframes slideUp {
    from {
        opacity: 0;
        transform: translateY(30px);
    }
    to {
        opacity: 1;
        transform: translateY(0);
    }
}

.slide-in-right {
    opacity: 0;
    transform: translateX(50px);
}

.slide-in-right.animate {
    animation-name: slideInRight;
}

@keyframes slideInRight {
    from {
        opacity: 0;
        transform: translateX(50px);
    }
    to {
        opacity: 1;
        transform: translateX(0);
    }
}

.slide-in-left {
    opacity: 0;
    transform: translateX(-50px);
}

.slide-in-left.animate {
    animation-name: slideInLeft;
}

@keyframes slideInLeft {
    from {
        opacity: 0;
        transform: translateX(-50px);
    }
    to {
        opacity: 1;
        transform: translateX(0);
    }
}

.zoom-in {
    opacity: 0;
    transform: scale(0.8);
}

.zoom-in.animate {
    animation-name: zoomIn;
}

@keyframes zoomIn {
    from {
        opacity: 0;
        transform: scale(0.8);
    }
    to {
        opacity: 1;
        transform: scale(1);
    }
}

/* Drag and drop animations */
.drag-item {
    transition: transform 0.2s ease, box-shadow 0.2s ease;
}

.drag-item.dragging {
    z-index: 1000;
    box-shadow: 0 10px 20px rgba(0, 0, 0, 0.19), 0 6px 6px rgba(0, 0, 0, 0.23);
}

.drag-item.dragging:active {
    cursor: grabbing;
}

.drag-ghost {
    opacity: 0.4;
    background: var(--drag-bg);
    border: 2px dashed var(--border-color);
}

.drag-over {
    transform: scale(1.02);
    box-shadow: 0 0 10px var(--primary-color);
}

/* Drop indicator */
.drop-indicator {
    height: 2px;
    background-color: var(--primary-color);
    margin: 5px 0;
    transition: height 0.2s ease;
}

.drop-indicator.active {
    height: 6px;
}

/* Countdown animation */
.flip-card {
    perspective: 1000px;
    display: inline-block;
    position: relative;
    width: 60px;
    height: 80px;
    margin: 0 5px;
}

.flip-card-inner {
    position: relative;
    width: 100%;
    height: 100%;
    text-align: center;
    transition: transform 0.8s;
    transform-style: preserve-3d;
}

.flip-card.flipping .flip-card-inner {
    transform: rotateX(180deg);
}

.flip-card-front, .flip-card-back {
    position: absolute;
    width: 100%;
    height: 100%;
    -webkit-backface-visibility: hidden;
    backface-visibility: hidden;
    display: flex;
    align-items: center;
    justify-content: center;
    font-size: 1.8rem;
    font-weight: bold;
    background-color: var(--bg-card);
    border-radius: 5px;
    box-shadow: 0 4px 8px var(--shadow-color);
}

.flip-card-back {
    transform: rotateX(180deg);
}

/* Progress animations */
.progress-bar {
    height: 10px;
    background-color: var(--bg-card-header);
    border-radius: 5px;
    overflow: hidden;
    margin: 10px 0;
}

.progress-bar-fill {
    height: 100%;
    background-color: var(--primary-color);
    border-radius: 5px;
    transition: width 0.5s ease;
}

/* Checkbox animations */
.checkbox-container {
    display: block;
    position: relative;
    padding-left: 35px;
    margin-bottom: 12px;
    cursor: pointer;
    user-select: none;
}

.checkbox-container input {
    position: absolute;
    opacity: 0;
    cursor: pointer;
    height: 0;
    width: 0;
}

.checkmark {
    position: absolute;
    top: 0;
    left: 0;
    height: 25px;
    width: 25px;
    background-color: var(--bg-card-header);
    border: 2px solid var(--border-color);
    border-radius: 4px;
    transition: all 0.3s ease;
}

.checkbox-container:hover input ~ .checkmark {
    background-color: var(--primary-color);
    opacity: 0.3;
}

.checkbox-container input:checked ~ .checkmark {
    background-color: var(--primary-color);
    border-color: var(--primary-color);
}

.checkmark:after {
    content: "";
    position: absolute;
    display: none;
    left: 9px;
    top: 5px;
    width: 5px;
    height: 10px;
    border: solid white;
    border-width: 0 3px 3px 0;
    transform: rotate(45deg);
    transition: all 0.3s ease;
}

.checkbox-container input:checked ~ .checkmark:after {
    display: block;
    animation: checkmark 0.3s ease-out;
}

@keyframes checkmark {
    0% {
        height: 0;
        width: 0;
        opacity: 0;
    }
    40% {
        height: 0;
        width: 5px;
        opacity: 1;
    }
    100% {
        height: 10px;
        width: 5px;
        opacity: 1;
    }
}

/* Confetti animation for task completion */
.confetti-container {
    position: absolute;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    pointer-events: none;
    z-index: 1000;
    overflow: hidden;
}

.confetti {
    position: absolute;
    width: 10px;
    height: 10px;
    background-color: #f00;
    animation: confetti-fall 5s linear infinite;
}

@keyframes confetti-fall {
    0% {
        transform: translateY(-100%) rotate(0deg);
        opacity: 1;
    }
    100% {
        transform: translateY(1000%) rotate(720deg);
        opacity: 0;
    }
}

/* Button animations */
.btn {
    position: relative;
    overflow: hidden;
}

.btn::after {
    content: '';
    position: absolute;
    top: 50%;
    left: 50%;
    width: 5px;
    height: 5px;
    background: rgba(255, 255, 255, 0.3);
    opacity: 0;
    border-radius: 100%;
    transform: scale(1, 1) translate(-50%);
    transform-origin: 50% 50%;
}

.btn:focus:not(:active)::after {
    animation: ripple 1s ease-out;
}

@keyframes ripple {
    0% {
        transform: scale(0, 0);
        opacity: 0.5;
    }
    20% {
        transform: scale(25, 25);
        opacity: 0.3;
    }
    100% {
        opacity: 0;
        transform: scale(40, 40);
    }
}

/* Activity type animations */
.activity-icon {
    display: inline-block;
    width: 30px;
    height: 30px;
    border-radius: 50%;
    margin-right: 10px;
    position: relative;
    overflow: hidden;
}

.activity-icon::before,
.activity-icon::after {
    content: '';
    position: absolute;
    top: 0;
    left: 0;
    right: 0;
    bottom: 0;
}

.activity-icon.travel::before {
    background-color: var(--activity-travel);
    animation: pulse 2s infinite;
}

.activity-icon.food::before {
    background-color: var(--activity-food);
    animation: bounce 2s infinite;
}

.activity-icon.sightseeing::before {
    background-color: var(--activity-sightseeing);
    animation: rotate 4s infinite linear;
}

.activity-icon.accommodation::before {
    background-color: var(--activity-accommodation);
    animation: fade 2s infinite alternate;
}

.activity-icon.shopping::before {
    background-color: var(--activity-shopping);
    animation: scale 2s infinite alternate;
}

@keyframes pulse {
    0% {
        transform: scale(0.95);
        box-shadow: 0 0 0 0 rgba(116, 192, 252, 0.7);
    }
    70% {
        transform: scale(1);
        box-shadow: 0 0 0 10px rgba(116, 192, 252, 0);
    }
    100% {
        transform: scale(0.95);
        box-shadow: 0 0 0 0 rgba(116, 192, 252, 0);
    }
}

@keyframes bounce {
    0%, 20%, 50%, 80%, 100% {
        transform: translateY(0);
    }
    40% {
        transform: translateY(-6px);
    }
    60% {
        transform: translateY(-3px);
    }
}

@keyframes rotate {
    from {
        transform: rotate(0deg);
    }
    to {
        transform: rotate(360deg);
    }
}

@keyframes fade {
    from {
        opacity: 0.6;
    }
    to {
        opacity: 1;
    }
}

@keyframes scale {
    from {
        transform: scale(0.8);
    }
    to {
        transform: scale(1.1);
    }
}

/* Tab animations */
.tab-content {
    transition: transform 0.3s ease, opacity 0.3s ease;
}

.tab-content.inactive {
    opacity: 0;
    transform: translateX(20px);
    position: absolute;
    pointer-events: none;
}

.tab-content.active {
    opacity: 1;
    transform: translateX(0);
    position: relative;
}

/* Day/Night mode toggle animation */
.theme-toggle {
    position: relative;
    width: 60px;
    height: 30px;
    background-color: #f1f1f1;
    border-radius: 30px;
    cursor: pointer;
    transition: background-color 0.3s ease;
}

.dark .theme-toggle {
    background-color: #333;
}

.theme-toggle::before {
    content: '‚òÄÔ∏è';
    position: absolute;
    top: 5px;
    left: 7px;
    font-size: 20px;
    transition: transform 0.3s ease;
}

.dark .theme-toggle::before {
    content: 'üåô';
    transform: translateX(30px);
}

/* Staggered animation for list items */
.staggered-item {
    opacity: 0;
    transform: translateY(20px);
}

.staggered-item.animate {
    animation: staggeredFadeIn 0.5s ease forwards;
}

.staggered-list .staggered-item:nth-child(1) { animation-delay: 0.1s; }
.staggered-list .staggered-item:nth-child(2) { animation-delay: 0.2s; }
.staggered-list .staggered-item:nth-child(3) { animation-delay: 0.3s; }
.staggered-list .staggered-item:nth-child(4) { animation-delay: 0.4s; }
.staggered-list .staggered-item:nth-child(5) { animation-delay: 0.5s; }
.staggered-list .staggered-item:nth-child(6) { animation-delay: 0.6s; }
.staggered-list .staggered-item:nth-child(7) { animation-delay: 0.7s; }
.staggered-list .staggered-item:nth-child(8) { animation-delay: 0.8s; }
.staggered-list .staggered-item:nth-child(9) { animation-delay: 0.9s; }
.staggered-list .staggered-item:nth-child(10) { animation-delay: 1s; }

@keyframes staggeredFadeIn {
    from {
        opacity: 0;
        transform: translateY(20px);
    }
    to {
        opacity: 1;
        transform: translateY(0);
    }
}